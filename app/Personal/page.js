'use client'

import { useState, useEffect } from 'react'
import { supabase }            from '../../lib/supabaseClient'
import AuthForm                from '../components/AuthForm'
import LogoutButton            from '../components/LogoutButton'
import StatsPanel              from '../components/StatsPanel'
import NotificationsBell       from '../components/NotificationsBell'
import styles                  from './page.module.css'

const LIKE_THRESHOLD = 100

export default function PersonalPage() {
  const [sessionChecked, setSessionChecked] = useState(false)
  const [session, setSession]               = useState(null)
  const [student, setStudent]               = useState(null)
  const [studentId, setStudentId]           = useState(null)
  const [stats, setStats]                   = useState({ ideasCount: 0, totalLikes: 0, rank: null })
  const [notifications, setNotifications]   = useState([])

  useEffect(() => {
    let mounted = true

    // –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
    const handleSession = async (session) => {
      if (!mounted) return
      setSession(session)
      setSessionChecked(true)

      if (!session) {
        // —Å–±—Ä–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        setStudent(null)
        setStudentId(null)
        setStats({ ideasCount: 0, totalLikes: 0, rank: null })
        setNotifications([])
        return
      }

      // –ø—Ä–∏ –≤—Ö–æ–¥–µ ‚Äî —Ç—è–Ω–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞
      const { data: stud } = await supabase
        .from('students')
        .select('firstname, lastname, student_id')
        .eq('auth_user_id', session.user.id)
        .single()

      if (!mounted || !stud) return
      setStudent({ firstname: stud.firstname, lastname: stud.lastname })
      setStudentId(stud.student_id)

      // –∏ –µ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É + —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      const { data: ideas } = await supabase
        .from('ideas')
        .select('student_id, content, idea_votes(vote)')
      if (!ideas) return

      // –ø–æ–¥—Å—á—ë—Ç –ª–∞–π–∫–æ–≤ –ø–æ –∫–∞–∂–¥–æ–º—É student_id
      const likesMap = {}
      ideas.forEach(i => {
        const c = i.idea_votes.filter(v => v.vote === 1).length
        likesMap[i.student_id] = (likesMap[i.student_id] || 0) + c
      })

      // –º–µ—Ç—Ä–∏–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
      const ideasCount = ideas.filter(i => i.student_id === stud.student_id).length
      const totalLikes = likesMap[stud.student_id] || 0

      // —Ä–µ–π—Ç–∏–Ω–≥
      const sortedIds = Object.entries(likesMap)
        .sort((a, b) => b[1] - a[1])
        .map(([id]) => Number(id))
      const rank = sortedIds.indexOf(stud.student_id) + 1

      // —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      const notes = ideas
        .filter(i => i.student_id === stud.student_id)
        .filter(i => i.idea_votes.filter(v => v.vote === 1).length >= LIKE_THRESHOLD)
        .map(i => `–í–∞—à–∞ –∏–¥–µ—è ¬´${i.content}¬ª –Ω–∞–±—Ä–∞–ª–∞ ${LIKE_THRESHOLD}+ –ª–∞–π–∫–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.`)

      setStats({ ideasCount, totalLikes, rank })
      setNotifications(notes)
    }

    // 1) –†–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    supabase.auth.getSession().then(({ data }) => {
      handleSession(data.session)
    })

    // 2) –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±—É–¥—É—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    const { data: { subscription } } = supabase.auth.onAuthStateChange(
      (event, session) => {
        handleSession(session)
      }
    )

    return () => {
      mounted = false
      subscription.unsubscribe()
    }
  }, [])

  // 1) –ñ–¥—ë–º, –ø–æ–∫–∞ –Ω–µ –≤—ã–∑–æ–≤–µ—Ç—Å—è getSession()
  if (!sessionChecked) return null

  // 2) –ï—Å–ª–∏ –Ω–µ—Ç —Å–µ—Å—Å–∏–∏ ‚Äî —Ñ–æ—Ä–º–∞
  if (!session) return <AuthForm />

  // 3) –ï—Å–ª–∏ —Å–µ—Å—Å–∏—è –µ—Å—Ç—å, –Ω–æ —Å—Ç—É–¥–µ–Ω—Ç –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∏—á–µ–≥–æ/loader
  if (!student) return null

  // 4) –í—Å—ë –≥–æ—Ç–æ–≤–æ ‚Äî —Ä–µ–Ω–¥–µ—Ä–∏–º –∫–∞–±–∏–Ω–µ—Ç
  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <div>
          <h2 className={styles.greeting}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</h2>
          <h1 className={styles.userName}>
            {student.firstname} {student.lastname}
          </h1>
        </div>
        <NotificationsBell notifications={notifications} />
      </div>

      <StatsPanel
        ideasCount={stats.ideasCount}
        totalLikes={stats.totalLikes}
        rank={stats.rank}
      />

      {stats.rank === 1 && (
        <div className={styles.topMessage}>
          –í–∞—à–∏ –∏–¥–µ–∏ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ä–µ–¥–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤! üéâ
        </div>
      )}

      <div className={styles.logoutWrapper}>
        <LogoutButton />
      </div>
    </div>
  )
}
